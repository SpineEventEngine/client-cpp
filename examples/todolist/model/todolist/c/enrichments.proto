//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package spine.examples.todolist;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.examples.todolist";
option java_package = "io.spine.examples.todolist.c.enrichments";
option java_outer_classname = "EnrichmentsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "todolist/values.proto";
import "todolist/model.proto";

// Enrichment for the events which required the task and label details.
//
message DetailsEnrichment {

    option (enrichment_for) = "spine.examples.todolist.LabelledTaskRestored,"
                                "spine.examples.todolist.LabelAssignedToTask";

    // A task details.
    TaskDetails task_details = 1 [(by) = "task_id"];

    // A label details.
    LabelDetails label_details = 2 [(by) = "label_id"];
}

// Enrichment for the events which required the list of the label IDs.
//
message LabelsListEnrichment {

    option (enrichment_for) = "spine.examples.todolist.TaskDescriptionUpdated,"
                              "spine.examples.todolist.TaskPriorityUpdated,"
                              "spine.examples.todolist.TaskDueDateUpdated,"
                              "spine.examples.todolist.TaskCompleted,"
                              "spine.examples.todolist.TaskReopened,"
                              "spine.examples.todolist.TaskDeleted,"
                              "spine.examples.todolist.TaskDraftFinalized,"
                              "spine.examples.todolist.LabelledTaskRestored,"
                              "spine.examples.todolist.LabelAssignedToTask";

    // A list of the label IDs.
    LabelIdsList label_ids_list = 1 [(by) = "task_id"];
}

// Task enrichment for the TaskDratfFinalized event.
//
message TaskEnrichment {
    option (enrichment_for) = "spine.examples.todolist.TaskDraftFinalized";

    // A task.
    Task task = 1 [(by) = "task_id"];
}
